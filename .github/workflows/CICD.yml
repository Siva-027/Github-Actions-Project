name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  compile:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Install Maven
      run: |
        sudo apt-get update
        sudo apt-get install -y maven
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven job
      run: mvn compile

  security:

    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4

    - name: Trivy installation
      run: |
        sudo apt-get install wget gnupg
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y

    - name: Trivy FS Scan
      run: trivy fs . --format table -o fsreport.json
    
    - name: Upload FS Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: fs-scan-report
        path: fsreport.json

    - name: Gitleaks installation
      run: sudo apt-get install gitleaks -y
    
    - name: Gitleaks scan
      run: gitleaks detect --source . --report-path=gitleaks-report.json

    - name: Upload Gitleaks Report
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-report
        path: gitleaks-report.json

  test:

    runs-on: self-hosted
    needs: security

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Run tests with Maven
      run: mvn test

  build_project_sonar_scan:

    runs-on: self-hosted
    needs: test

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y unzip
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build project with Maven
      run: mvn package

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-app-jar
        path: target/*.jar
    
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v6.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
          pollingTimeoutSec: 600
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  build_docker_image_and_push:

    runs-on: self-hosted
    needs: build_project_sonar_scan

    steps:    
    - uses: actions/checkout@v4  

    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: java-app-jar
        path: ./app

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
         push: true
         tags: siva/bakapp:latest
